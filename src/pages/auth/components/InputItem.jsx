import React from 'react';
import sl from "../auth.module.css";

const InputItem = ({type, label, placeholder, error, register, name}) => {

    const [showPassword, setShowPassword] = React.useState(true)


    const isError = {
        border: '2px solid red',
        outline: 'none'
    }

    const isOnPassword = (<div className={sl.ii_pass}>
        <input
            type={showPassword ? 'text' : 'password'}
            placeholder={placeholder}
            style={error ? isError : {}}
            {...register(name)}
        />
        <span onClick={() => setShowPassword(!showPassword)}>
                {showPassword ? (
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="12" viewBox="0 0 16 12" fill="none">
                        <path d="M8.00008 2.73341C7.354 2.73341 6.72242 2.925 6.18522 3.28395C5.64802 3.64289 5.22932 4.15308 4.98207 4.74998C4.73483 5.34689 4.67014 6.00371 4.79618 6.63738C4.92223 7.27105 5.23335 7.85311 5.6902 8.30996C6.14705 8.76682 6.72912 9.07793 7.36279 9.20398C7.99646 9.33002 8.65328 9.26533 9.25018 9.01809C9.84708 8.77084 10.3573 8.35214 10.7162 7.81494C11.0752 7.27774 11.2667 6.64617 11.2667 6.00008C11.2667 5.13371 10.9226 4.30282 10.31 3.6902C9.69734 3.07758 8.86646 2.73341 8.00008 2.73341ZM8.00008 8.06675C7.59133 8.06675 7.19176 7.94554 6.8519 7.71845C6.51204 7.49136 6.24715 7.16859 6.09073 6.79096C5.93431 6.41333 5.89338 5.99779 5.97312 5.59689C6.05287 5.196 6.2497 4.82776 6.53873 4.53873C6.82776 4.2497 7.196 4.05287 7.59689 3.97312C7.99779 3.89338 8.41333 3.93431 8.79096 4.09073C9.16859 4.24715 9.49136 4.51204 9.71845 4.8519C9.94554 5.19176 10.0667 5.59133 10.0667 6.00008C10.0667 6.5482 9.84901 7.07386 9.46143 7.46144C9.07386 7.84901 8.54819 8.06675 8.00008 8.06675ZM15.1267 5.14675C14.8656 4.60915 14.5239 4.11456 14.1134 3.68008C13.3404 2.85882 12.44 2.1677 11.4467 1.63341C10.3945 1.03347 9.21085 0.701504 8.00008 0.666748C6.15833 0.763178 4.40027 1.4664 3.00008 2.66675C2.38637 3.1499 1.83741 3.71006 1.36675 4.33341C1.17693 4.59537 1.01178 4.87434 0.873415 5.16675C0.747506 5.4272 0.677127 5.71098 0.666748 6.00008C0.674337 6.29596 0.744786 6.58685 0.873415 6.85341C1.1346 7.39102 1.47631 7.8856 1.88675 8.32008C2.65972 9.14135 3.56019 9.83246 4.55341 10.3667C5.60567 10.9667 6.78931 11.2987 8.00008 11.3334C9.84183 11.237 11.5999 10.5338 13.0001 9.33342C13.6243 8.85864 14.1845 8.30516 14.6667 7.68675C14.8566 7.42479 15.0217 7.14583 15.1601 6.85341C15.2772 6.58432 15.3363 6.29355 15.3334 6.00008C15.3258 5.7042 15.2554 5.41332 15.1267 5.14675ZM13.9067 6.31342C13.7025 6.71861 13.4397 7.0915 13.1267 7.42008C12.4652 8.12797 11.6957 8.72651 10.8467 9.19342C9.97844 9.69184 9.00079 9.96888 8.00008 10.0001C6.46441 9.90732 5.00119 9.31501 3.83341 8.31342C3.31313 7.90301 2.84717 7.42809 2.44675 6.90008C2.31049 6.71627 2.19217 6.51981 2.09341 6.31342C2.04587 6.21459 2.01437 6.10882 2.00008 6.00008C2.01437 5.89135 2.04587 5.78558 2.09341 5.68675C2.29766 5.28156 2.56048 4.90866 2.87341 4.58008C3.53492 3.87219 4.30447 3.27365 5.15341 2.80675C6.02173 2.30832 6.99937 2.03128 8.00008 2.00008C9.53575 2.09284 10.999 2.68516 12.1667 3.68675C12.687 4.09715 13.153 4.57207 13.5534 5.10008C13.6897 5.2839 13.808 5.48035 13.9067 5.68675C13.9543 5.78558 13.9858 5.89135 14.0001 6.00008C13.9858 6.10882 13.9543 6.21459 13.9067 6.31342Z" fill="#ABA8AD"/>
                    </svg>
                ) : (
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="12" viewBox="0 0 16 12" fill="none">
                        <path d="M8.00008 9.33321C8.88414 9.33321 9.73198 8.98202 10.3571 8.3569C10.9822 7.73178 11.3334 6.88393 11.3334 5.99988C11.3343 5.35471 11.144 4.72375 10.7867 4.18655L13.1734 1.80655C13.2356 1.74439 13.2849 1.67059 13.3185 1.58938C13.3522 1.50816 13.3695 1.42112 13.3695 1.33321C13.3695 1.24531 13.3522 1.15826 13.3185 1.07705C13.2849 0.995832 13.2356 0.922039 13.1734 0.859879C13.1113 0.79772 13.0375 0.748413 12.9562 0.714773C12.875 0.681133 12.788 0.663818 12.7001 0.663818C12.6122 0.663818 12.5251 0.681133 12.4439 0.714773C12.3627 0.748413 12.2889 0.79772 12.2267 0.859879L9.81341 3.24655C9.27622 2.88926 8.64525 2.69904 8.00008 2.69988C7.12182 2.70866 6.28251 3.06373 5.66458 3.6879C5.04665 4.31207 4.70004 5.1549 4.70008 6.03321C4.69924 6.67838 4.88946 7.30935 5.24675 7.84655L2.86008 10.1932C2.73455 10.3187 2.66402 10.489 2.66402 10.6665C2.66402 10.8441 2.73455 11.0143 2.86008 11.1399C2.98562 11.2654 3.15588 11.3359 3.33341 11.3359C3.51095 11.3359 3.68121 11.2654 3.80675 11.1399L6.18675 8.75321C6.7202 9.1223 7.35146 9.32421 8.00008 9.33321ZM10.0334 5.99988C10.0417 6.34658 9.95965 6.68948 9.79538 6.99491C9.63111 7.30034 9.39024 7.5578 9.09642 7.74203C8.8026 7.92626 8.46592 8.03092 8.11943 8.04574C7.77294 8.06055 7.42856 7.98502 7.12008 7.82655L9.78675 5.15988C9.92899 5.41865 10.0132 5.70529 10.0334 5.99988ZM6.00008 5.99988C5.99181 5.65317 6.07384 5.31028 6.23811 5.00485C6.40238 4.69942 6.64325 4.44196 6.93708 4.25773C7.2309 4.0735 7.56758 3.96884 7.91406 3.95402C8.26055 3.93921 8.60494 4.01474 8.91341 4.17321L6.24675 6.83988C6.10451 6.58111 6.02033 6.29447 6.00008 5.99988ZM2.20008 8.66655C1.79004 8.26684 1.42966 7.81916 1.12675 7.33321C0.85191 6.94045 0.692559 6.47856 0.666748 5.99988C0.674337 5.704 0.744786 5.41311 0.873415 5.14655C1.01178 4.85414 1.17693 4.57517 1.36675 4.31321C1.83873 3.69691 2.38763 3.14352 3.00008 2.66655C4.40027 1.4662 6.15833 0.762976 8.00008 0.666546C8.50357 0.668229 9.005 0.730908 9.49341 0.853213C9.58128 0.871373 9.66457 0.907082 9.73831 0.9582C9.81204 1.00932 9.8747 1.07479 9.92253 1.15071C9.97036 1.22662 10.0024 1.3114 10.0166 1.39998C10.0309 1.48856 10.0272 1.57911 10.0056 1.6662C9.98408 1.7533 9.94517 1.83515 9.89124 1.90685C9.8373 1.97855 9.76945 2.03862 9.69174 2.08347C9.61403 2.12832 9.52807 2.15703 9.43901 2.16787C9.34995 2.1787 9.25961 2.17145 9.17341 2.14655C8.78932 2.05227 8.39556 2.00305 8.00008 1.99988C6.99937 2.03108 6.02173 2.30812 5.15341 2.80655C4.30447 3.27345 3.53492 3.87199 2.87341 4.57988C2.56048 4.90846 2.29766 5.28135 2.09341 5.68655C2.04587 5.78538 2.01437 5.89114 2.00008 5.99988C2.03865 6.22563 2.12751 6.4398 2.26008 6.62655C2.50871 7.01486 2.8018 7.37284 3.13341 7.69321C3.26249 7.81698 3.33711 7.98695 3.34086 8.16574C3.34461 8.34452 3.27718 8.51748 3.15341 8.64655C3.02965 8.77562 2.85967 8.85024 2.68089 8.85399C2.50211 8.85774 2.32915 8.79031 2.20008 8.66655ZM15.3334 5.99988C15.3258 6.29576 15.2554 6.58665 15.1267 6.85321C14.999 7.14437 14.845 7.4233 14.6667 7.68655C14.1845 8.30496 13.6243 8.85843 13.0001 9.33321C11.5999 10.5336 9.84183 11.2368 8.00008 11.3332C7.49659 11.3315 6.99516 11.2689 6.50675 11.1465C6.34118 11.0987 6.20057 10.9886 6.11442 10.8393C6.02827 10.6901 6.00327 10.5133 6.04466 10.346C6.08605 10.1787 6.19062 10.0339 6.33644 9.94203C6.48225 9.85016 6.65797 9.81833 6.82675 9.85321C7.21084 9.94749 7.6046 9.99671 8.00008 9.99988C9.00079 9.96868 9.97844 9.69164 10.8467 9.19321C11.6957 8.72631 12.4652 8.12777 13.1267 7.41988C13.4397 7.0913 13.7025 6.7184 13.9067 6.31321C13.9543 6.21438 13.9858 6.10861 14.0001 5.99988C13.9774 5.78789 13.9043 5.58442 13.7867 5.40655C13.5734 5.04547 13.3084 4.71756 13.0001 4.43321C12.8714 4.31276 12.7956 4.14625 12.7894 3.97009C12.7831 3.79394 12.8469 3.62247 12.9667 3.49321C13.0872 3.36452 13.2537 3.28876 13.4299 3.28251C13.606 3.27627 13.7775 3.34004 13.9067 3.45988C14.3147 3.83538 14.6651 4.26892 14.9467 4.74655C15.1754 5.12675 15.3082 5.55691 15.3334 5.99988Z" fill="#ABA8AD"/>
                    </svg>
                )}
            </span>
    </div>);

    return (
        <div className={sl.ii}>
            <label>{label}</label>
            {
                type === 'password' ? isOnPassword : (
                    <input
                        type={type}
                        placeholder={placeholder}
                        style={error ? isError : {}}
                        {...register(name)}
                    />
                )
            }
            <p>{error}</p>
        </div>
    )
}

export default InputItem;